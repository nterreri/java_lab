package uk.ac.ucl.cs.nterreri.mole;

import java.awt.EventQueue;

import javax.swing.JFrame;
import java.awt.GridBagLayout;
import javax.swing.JButton;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.Timer;

import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;

public class MainWindow {

	private JFrame frame;
	private JButton btnGrid[][];
	
	//Timer fields:
	private int delay;
	private ActionListener taskPerformer;
	private Timer timer;
	

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					MainWindow window = new MainWindow();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
				
			}
		});
	}

	/**
	 * Create the application.
	 */
	public MainWindow() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		//Initializations:
		frame = new JFrame();
		frame.setBounds(0, 0, 150*4 + 100, 150*4 + 30);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		
		//Initializing grid:
		btnGrid = new JButton[4][4];
		
		for(int y = 0; y < 4; y++)
		{
			for(int x = 0; x < 4; x++)
			{
				btnGrid[x][y] = new JButton();
				btnGrid[x][y].setBounds(x*150, y*150, 150, 150);
				btnGrid[x][y].setEnabled(false);
			}
		}

		
		
		//Adding layout and content to pane:
		frame.getContentPane().setLayout(null);
		
		for(int y = 0; y < 4; y++)
			for(int x = 0; x < 4; x++)
			frame.getContentPane().add(btnGrid[x][y]);

		//
		idle_game();
		
	}
	
	public void idle_game() {
		//Initialize timer:
		delay = 1000;
		taskPerformer = new ActionListener() {
			public void actionPerformed(ActionEvent evt) {
				System.out.println("Timer action!");
				//Each timer tick, the whole grid is traversed, and every
				//other square status is changed:
				for(int y = 0; y < 4; y++)
					for(int x = 0; x < 4; x++)
					{}
			}
		};
		timer = new Timer(delay, taskPerformer);
		
		timer.start();
	
		
	}
}
